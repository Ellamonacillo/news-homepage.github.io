/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-xl: 80rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -0.025em;
    --tracking-wider: 0.05em;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-soft-orange: hsl(35, 77%, 62%);
    --color-soft-red: hsl(5, 85%, 63%);
    --color-off-white: hsl(36, 100%, 99%);
    --color-grayish-blue: hsl(233, 8%, 79%);
    --color-dark-grayish-blue: hsl(236, 13%, 42%);
    --color-very-dark-blue: hsl(240, 100%, 5%);
    --font-inter: 'Inter';
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .static {
    position: static;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .w-full {
    width: 100%;
  }
  .max-w-screen-xl {
    max-width: var(--breakpoint-xl);
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .xl\:hidden {
    @media (width >= 80rem) {
      display: none;
    }
  }
}
@layer base {
  body {
    margin: calc(var(--spacing) * 0);
    height: 100%;
    width: 100%;
    padding: calc(var(--spacing) * 5);
    font-family: var(--font-inter);
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 34);
    }
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 14);
    }
  }
  h1 {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 80rem) {
      font-size: 66px;
    }
    @media (width >= 80rem) {
      --tw-font-weight: var(--font-weight-extrabold);
      font-weight: var(--font-weight-extrabold);
    }
  }
  h2 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 80rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  h3 {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  a {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  a:focus, button:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-soft-red);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-outline-style: none;
    outline-style: none;
  }
}
@layer components {
  nav {
    .desktop-nav {
      align-items: center;
      justify-content: space-between;
      ul {
        display: flex;
        :where(& > :not(:last-child)) {
          --tw-space-x-reverse: 0;
          margin-inline-start: calc(calc(var(--spacing) * 10) * var(--tw-space-x-reverse));
          margin-inline-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-x-reverse)));
        }
        color: var(--color-dark-grayish-blue);
        a {
          font-size: var(--text-lg);
          line-height: var(--tw-leading, var(--text-lg--line-height));
          &:hover {
            @media (hover: hover) {
              color: var(--color-soft-red);
            }
          }
        }
      }
    }
    .mobile-nav {
      position: fixed;
      inset: calc(var(--spacing) * 0);
      z-index: 50;
      height: 100%;
      justify-content: flex-end;
      background-color: color-mix(in srgb, oklch(21% 0.034 264.665) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
      }
      .drawer-nav {
        height: 100%;
        width: calc(2/3 * 100%);
        background-color: var(--color-white);
        padding: calc(var(--spacing) * 6);
        ul {
          margin-top: calc(var(--spacing) * 20);
          display: flex;
          flex-direction: column;
          gap: calc(var(--spacing) * 6);
          font-size: var(--text-lg);
          line-height: var(--tw-leading, var(--text-lg--line-height));
        }
      }
    }
  }
  main {
    margin-block: calc(var(--spacing) * 8);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 15) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 15) * calc(1 - var(--tw-space-y-reverse)));
    }
    @media (width >= 80rem) {
      margin-top: calc(var(--spacing) * 12);
    }
    .main-container {
      display: flex;
      flex-direction: column;
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 15) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 15) * calc(1 - var(--tw-space-y-reverse)));
      }
      @media (width >= 80rem) {
        flex-direction: row;
      }
      @media (width >= 80rem) {
        :where(& > :not(:last-child)) {
          --tw-space-y-reverse: 0;
          margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
          margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
        }
      }
      @media (width >= 80rem) {
        :where(& > :not(:last-child)) {
          --tw-space-x-reverse: 0;
          margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
          margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
        }
      }
      section {
        :where(& > :not(:last-child)) {
          --tw-space-y-reverse: 0;
          margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
          margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }
        @media (width >= 48rem) {
          :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
          }
        }
        @media (width >= 80rem) {
          display: flex;
        }
        @media (width >= 80rem) {
          flex-direction: column;
        }
        @media (width >= 80rem) {
          justify-content: space-around;
        }
        .hero-content {
          display: flex;
          flex-direction: column;
          :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
          }
          @media (width >= 80rem) {
            flex-direction: row;
          }
          @media (width >= 80rem) {
            justify-content: space-between;
          }
          @media (width >= 80rem) {
            :where(& > :not(:last-child)) {
              --tw-space-y-reverse: 0;
              margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
              margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
            }
          }
          h1 {
            --tw-tracking: var(--tracking-tight);
            letter-spacing: var(--tracking-tight);
            @media (width >= 80rem) {
              width: 100%;
            }
          }
          div {
            :where(& > :not(:last-child)) {
              --tw-space-y-reverse: 0;
              margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
              margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
            }
            @media (width >= 80rem) {
              display: flex;
            }
            @media (width >= 80rem) {
              width: 100%;
            }
            @media (width >= 80rem) {
              flex-direction: column;
            }
            p {
              font-size: 15px;
              color: var(--color-dark-grayish-blue);
              @media (width >= 80rem) {
                font-size: 17px;
              }
              @media (width >= 80rem) {
                --tw-leading: calc(var(--spacing) * 8);
                line-height: calc(var(--spacing) * 8);
              }
            }
            button {
              margin-top: auto;
              align-self: flex-start;
              background-color: var(--color-soft-red);
              padding-inline: calc(var(--spacing) * 7);
              padding-block: calc(var(--spacing) * 3);
              --tw-font-weight: var(--font-weight-bold);
              font-weight: var(--font-weight-bold);
              --tw-tracking: var(--tracking-wider);
              letter-spacing: var(--tracking-wider);
              color: var(--color-very-dark-blue);
              text-transform: uppercase;
              &:hover {
                @media (hover: hover) {
                  cursor: pointer;
                }
              }
              &:hover {
                @media (hover: hover) {
                  background-color: var(--color-very-dark-blue);
                }
              }
              &:hover {
                @media (hover: hover) {
                  color: var(--color-off-white);
                }
              }
              @media (width >= 80rem) {
                padding-inline: calc(var(--spacing) * 10);
              }
              @media (width >= 80rem) {
                --tw-tracking: 0.2em;
                letter-spacing: 0.2em;
              }
            }
          }
        }
      }
      aside {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        :where(& > :not(:last-child)) {
          --tw-space-y-reverse: 0;
          margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
          margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
        }
        background-color: var(--color-very-dark-blue);
        padding-inline: calc(var(--spacing) * 6);
        padding-block: calc(var(--spacing) * 10);
        @media (width >= 80rem) {
          width: calc(4/5 * 100%);
        }
        h2 {
          color: var(--color-soft-orange);
        }
        hr {
          color: var(--color-dark-grayish-blue);
        }
        .aside-content {
          display: flex;
          flex-direction: column;
          :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
          }
          a {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            --tw-font-weight: var(--font-weight-bold);
            font-weight: var(--font-weight-bold);
            color: var(--color-white);
            &:hover {
              @media (hover: hover) {
                color: var(--color-soft-orange);
              }
            }
          }
          p {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            color: var(--color-grayish-blue);
            @media (width >= 80rem) {
              font-size: 15px;
            }
          }
        }
      }
    }
    article {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
      @media (width >= 80rem) {
        display: flex;
      }
      @media (width >= 80rem) {
        justify-content: space-between;
      }
      .article-container {
        display: flex;
        :where(& > :not(:last-child)) {
          --tw-space-x-reverse: 0;
          margin-inline-start: calc(calc(var(--spacing) * 5) * var(--tw-space-x-reverse));
          margin-inline-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-x-reverse)));
        }
        @media (width >= 80rem) {
          height: 100%;
        }
        @media (width >= 80rem) {
          width: calc(1/3 * 100%);
        }
        img {
          height: calc(var(--spacing) * 32);
          @media (width >= 80rem) {
            height: calc(var(--spacing) * 36);
          }
        }
        .article-content {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          @media (width >= 80rem) {
            padding-right: calc(var(--spacing) * 8);
          }
          h3 {
            color: var(--color-soft-red);
          }
          a {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --tw-font-weight: var(--font-weight-extrabold);
            font-weight: var(--font-weight-extrabold);
            &:hover {
              @media (hover: hover) {
                color: var(--color-soft-red);
              }
            }
            @media (width >= 80rem) {
              font-size: var(--text-lg);
              line-height: var(--tw-leading, var(--text-lg--line-height));
            }
          }
          p {
            font-size: 15px;
            color: var(--color-dark-grayish-blue);
          }
        }
      }
    }
  }
  footer {
    width: 100%;
    text-align: center;
  }
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-outline-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-space-x-reverse: 0;
      --tw-space-y-reverse: 0;
      --tw-tracking: initial;
      --tw-leading: initial;
    }
  }
}
